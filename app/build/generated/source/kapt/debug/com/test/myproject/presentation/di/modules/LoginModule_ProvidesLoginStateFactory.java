// Generated by Dagger (https://dagger.dev).
package com.test.myproject.presentation.di.modules;

import com.test.myproject.presentation.utilities.LoginState;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class LoginModule_ProvidesLoginStateFactory implements Factory<LoginState> {
  private final LoginModule module;

  public LoginModule_ProvidesLoginStateFactory(LoginModule module) {
    this.module = module;
  }

  @Override
  public LoginState get() {
    return providesLoginState(module);
  }

  public static LoginModule_ProvidesLoginStateFactory create(LoginModule module) {
    return new LoginModule_ProvidesLoginStateFactory(module);
  }

  public static LoginState providesLoginState(LoginModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.providesLoginState());
  }
}
